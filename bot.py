#!/usr/bin/env python3

# --------------- комментарий 72 символа -------------------------------
# ----------------------- код 79 символов -------------------------------------

"""Задание:

Скрипт-класс ботов.
Начало: 30 марта 2018 г. 02:37.
Обновлена: 17 сентября 2018 г. 23:45.

"""

# Версия скрипта.  
bot_version = '0.1.0'

# Планирование разработки:

# Исправлено в ver.0.1.0:
# -----------------------
# 
# План работ на ver.0.1.X:
# ----------------------
# 1.Создать прототип бота, который будет двигаться в хаотическом
#   порядке по полю, теряя один процент жизни за ход, до тех пор,
#   пока жизнь его не станет равна нулю.

# Подключаем настройки.
import settings

# Подключаем модуль генератора случайных чисел.
import random

# Создаём класс резидента-бота.
class Resident:
    """ Класс, описывающий поведение и характеристики бота. """
    
    def __init__(self, pos_x=1, pos_y=1, genetic_number = 1, number = 1):
        """ Конструктор класса. Создаём бота в мире."""
        
        # Положение счётчика в программе бота (от ProgramStep).
        self.ps = 0
        # Здоровье бота.
        self.health = 10 + random.randint(0, 10)
        # Программа бота, пока что произвольная.
        self.memory = [random.randint(0, 8) for loop in range(0, 64)]
        # Индивидуальный номер генотипа бота.
        self.genetic_number = genetic_number
        # Индивидуальный номер бота.
        self.number = number
        # Положение по оси Х.
        self.pos_x = pos_x
        # Положение по оси Y.
        self.pos_y = pos_y
        # Дельта положения по оси Х.
        self.pos_dx = 0
        # Дельта положения по оси Y.
        self.pos_dy = 0
        
    def program(self):
        """ Программа бота. """
        
        # Обнуляем дельту перемещения:
        # -дельту перемещения по оси X.
        self.pos_dx = 0
        # -дельту перемещения по оси Y.
        self.pos_dy = 0
        
        # Код "0" = "Ничего не делаю."
        if self.memory[self.ps] == 0:
            print('Бот №', self.number,
                  '- ничего не делаю! Ячейка памяти №', self.ps, '.')
        
        # Код "1" = "Поднимаюсь наверх."
        if self.memory[self.ps] == 1:
            print('Бот №', self.number,
                  '- поднимаюсь наверх! Ячейка памяти №', self.ps, '.')
            self.pos_dy = -1
        
        # Код "2" = "Поднимаюсь наверх и вправо."
        if self.memory[self.ps] == 2:
            print('Бот №', self.number,
                  '- поднимаюсь наверх и вправо! Ячейка памяти №',
                  self.ps, '.')
            self.pos_dx = 1
            self.pos_dy = -1   
                  
        # Код "3" = "Двигаюсь вправо."
        if self.memory[self.ps] == 3:
            print('Бот №', self.number,
                  '- двигаюсь вправо! Ячейка памяти №', self.ps, '.')
            self.pos_dx = 1
                  
        # Код "4" = "Спускаюсь вниз и вправо."
        if self.memory[self.ps] == 4:
            print('Бот №', self.number,
                  '- спускаюсь вниз и вправо! Ячейка памяти №',
                  self.ps, '.')
            self.pos_dx = 1
            self.pos_dy = 1
                  
        # Код "5" = "Спускаюсь вниз."
        if self.memory[self.ps] == 5:
            print('Бот №', self.number,
                  '- спускаюсь вниз! Ячейка памяти №', self.ps, '.')
            self.pos_dy = 1
                  
        # Код "6" = "Спускаюсь вниз и влево."
        if self.memory[self.ps] == 6:
            print('Бот №', self.number,
                  '- спускаюсь вниз и влево! Ячейка памяти №',
                  self.ps, '.')
            self.pos_dx = -1
            self.pos_dy = 1
                  
        # Код "7" = "Двигаюсь влево."
        if self.memory[self.ps] == 7:
            print('Бот №', self.number,
                  '- двигаюсь влево! Ячейка памяти №', self.ps, '.')
            self.pos_dx = -1
                  
        # Код "8" = "Поднимаюсь наверх и влево."
        if self.memory[self.ps] == 8:
            print('Бот №', self.number,
                  '- поднимаюсь наверх и влево! Ячейка памяти №',
                  self.ps, '.')
            self.pos_dx = -1
            self.pos_dy = -1 
        
        # Делаю шаг вперёд по программе.
        if self.ps == 63:
            print('Бот №', self.number,
                  'выполнил всю программу в памяти бота!')
            print('Возвращаюсь на первую ячейку!')
            self.ps = 0
        else:
            self.ps += 1
        
        # В конце хода отнимаем 1% жизни.
        self.health -= 1